| {% block head %}
link(rel="stylesheet", href="//releases.flowplayer.org/6.0.3/skin/minimalist.css")
| {% endblock %}

| {% block body %}

#node-container
	section.node-preview.video
		#flowplayer_container.is-splash.play-button(
			style="{% if node.picture %}background-image:url({{node.picture.thumbnail('l', api=api)}}); background-repeat:no-repeat; {% endif %}")
			.fp-startscreen.fp-toggle
				a.big-play-button
					i.pi-play
			.fp-endscreen
				a.watch-again.fp-toggle
					i.pi-replay
					| Watch again
			.fp-waiting
				i.pi-spin.spin


	section.node-details-container.video

		.node-details-header
			.node-title
				| {{node.name}}

		.node-details-meta.header
			ul.node-details-meta-list
				| {% if node.permissions.world %}
				li.node-details-meta-list-item.access.public(
					data-toggle="tooltip",
					data-placement="left",
					title="Anybody can download. Share it!")
					i.pi-lock-open
					span Public
				| {% endif %}

				| {% if node.file_variations %}
				li.btn-group.node-details-meta-list-item.video.download
					button.btn.btn-default.dropdown-toggle(
						type="button",
						data-toggle="dropdown",
						aria-haspopup="true",
						aria-expanded="false")
						| Download
						i.pi-angle-down.icon-dropdown-menu

					ul.dropdown-menu
						| {% for child in node.file_variations %}
						li
							a(href="{{ child.link }}",
								title="Download this video format")
								span.length {{ child.length | filesizeformat }}

								span.format {{ child.format }}
								span.size {{ child.size }}

						| {% endfor %}
				| {% else %}
				a(href="#")
					button.btn.btn-default.join-us(type="button")
						| Download Video
				| {% endif %}

		.node-details-description
			| {{node.description}}

		.node-details-meta.footer
			ul.node-details-meta-list
				li.node-details-meta-list-item.status
						| {{node.properties.status}}

				li.node-details-meta-list-item.author
					| {{ node.user.full_name }}

				li.node-details-meta-list-item.date(title="Created {{ node._updated | pretty_date }}")
					| {{ node._updated | pretty_date }}


		#comments-container
			#comments-list-items-loading
				i.pi-spin

| {% endblock %}

| {% block footer_scripts %}

script(type="text/javascript").
	// Generate GA pageview
	ga('send', 'pageview', (location.pathname + '#' + '{{node._id}}'));

	$('[data-toggle="tooltip"]').tooltip({'delay' : {'show': 1250, 'hide': 250}})

	var content_type = $("li.node-details-meta-list-item.type").text();
	$("li.node-details-meta-list-item.type").text(content_type.substring(content_type.indexOf("/") + 1));

	var container = document.getElementById("flowplayer_container");

	flowplayer(container, {
		key: "{{config.FLOWPLAYER_KEY}}",
		embed: false,
		splash: true,
		{% if node.video_sources %}
		clip: {
			sources: {{ node.video_sources | safe }}
		}
		{% else %}
		disabled: true
		{% endif %}
	});

	{% if not node.video_sources %}
	$('#flowplayer_container, .join-us').click(function() {
		$.get('/403', function(data) {
			$('#node-container').html(data);
			$('#error_container').css('display', 'flex');
		})
	});
	{% endif %}

include ../../_scripts

| {% endblock %}
