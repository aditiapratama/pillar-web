| {% extends 'layout.html' %}

| {% block page_title %}New {{ node_type.name }}{% endblock %}

| {% block header_backdrop %}
| {% if project.properties.picture_header %}
.navbar-backdrop(style="background-image: url({{ project.properties.picture_header.thumbnail('m', api=api) }})")
| {% elif node.picture %}
.navbar-backdrop(style="background-image: url({{ node.picture.thumbnail('m', api=api) }})")
| {% else %}
.navbar-backdrop
| {% endif %}
.navbar-backdrop-overlay
| {% endblock %}


| {% block body %}
.container.box
	form(
		method='POST',
		action="{{url_for('nodes.posts_edit', post_id=post._id)}}")

		#blog_container.post-create

			| {% with errors = errors %}
			| {% if errors %}
			| {% for field in errors %}
			.alert.alert-danger(role='alert')
				strong {{field}}
				| 						{% for message in errors[field] %}
				| 								{{message}}|
				| 						{% endfor %}
			| 				{% endfor %}
			| 		{% endif %}
			| 		{% endwith %}

			#blog_index-sidebar
				| {% if project._id != config.MAIN_PROJECT_ID %}
				.blog_project-card
					a.item-header(
						href="{{ url_for('project_view', project_url=project.properties.url) }}")

						.overlay
						| {% if project.properties.picture_header %}
						img.background(src="{{ project.properties.picture_header.thumbnail('m', api=api) }}")
						| {% endif %}

					a.card-thumbnail(
						href="{{ url_for('project_view', project_url=project.properties.url) }}")
						| {% if project.properties.picture_square %}
						img.thumb(src="{{ project.properties.picture_square.thumbnail('m', api=api) }}")
						| {% endif %}

					.item-info

						a.item-title(
							href="{{ url_for('project_view', project_url=project.properties.url) }}")
							| {{ project.name }}

				| {% endif %}

				.blog_project-sidebar
					#blog_post-edit-form
						| {% for field in form %}
						| {% if field.name in ['picture', 'status'] %}

						.form-group(class="{{field.name}}")
							| {{ field.label }}
							| {% if field.name == 'picture' %}
							| {% if post.picture %}
							img.node-preview-thumbnail(src="{{ post.picture.thumbnail('m', api=api) }}")
							a(href="#", class="file_delete", data-field-name="picture", data-file_id="{{post.picture._id}}") Delete
							| {% endif %}
							| {% endif %}
							| {{ field(class='form-control') }}

						| {% endif %}
						| {% endfor %}

					input.btn.btn-default.button-create(type='submit', value='Update {{ node_type.name }}')

					a.btn.btn-default.button-back(href="{{ url_for('project_view', project_url=project.properties.url) }}blog")
						| Back to Blog

			#blog_post-edit-container
				#blog_post-edit-title
					| Edit {{ node_type.name }}

				#blog_post-edit-form
					| {% for field in form %}
					| {% if field.name == 'csrf_token' %}
					| {{ field }}
					| {% else %}
					| {% if field.type == 'HiddenField' %}
					| {{ field }}
					| {% else %}

					| {% if field.name not in ['description', 'picture', 'category', 'status'] %}

					.form-group(class="{{field.name}}")
						| {{ field.label }}
						| {{ field(class='form-control') }}

					| {% endif %}
					| {% endif %}
					| {% endif %}
					| {% endfor %}



| {% endblock %}

| {% block footer_scripts %}
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/vendor/jquery.ui.widget.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/jquery.iframe-transport.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/jquery.fileupload.js') }}")

script(type="text/javascript").
	var convert = new Markdown.getSanitizingConverter().makeHtml;

	/* Build the markdown preview when typing in textarea */
	$(function() {

		var $textarea = $('.form-group.content textarea'),
				$loader = $('<div class="md-preview-loading"><i class="pi-spin spin"></i></div>').insertAfter($textarea),
				$preview = $('<div class="node-edit-form-md-preview" />').insertAfter($loader);

		$loader.hide();

		// Delay function to not start converting heavy posts immediately
		var delay = (function(){
			var timer = 0;
			return function(callback, ms){
				clearTimeout (timer);
				timer = setTimeout(callback, ms);
			};
		})();

		$textarea.keyup(function() {
			/* If there's an iframe (YouTube embed), delay markdown convert 1.5s */
			if (/iframe/i.test($textarea.val())) {
				$loader.show();

				delay(function(){
					// Convert markdown
					$preview.html(convert($textarea.val()));
					$loader.hide();
				}, 1500 );
			} else {
				// Convert markdown
				$preview.html(convert($textarea.val()));
			};
		}).trigger('keyup');
	});

	function deleteFile(fileField, newFileId) {
		newFileId = newFileId || null;
		var fileId = fileField.val();
		var url = '/files/delete/' + fileId;
		$.post(url, function(data){}).success(function(dataResponse){
			// Notify of successful request
			//- statusBarSet('success', 'Original File Removed Successfully');
			// If we provide the id of a previously uploaded file, add it here
			if (newFileId) {
				fileField.val(newFileId);
			} else {
				fileField.val('');
			}
		});
	}

	$('.file_delete').click(function(e){
		e.preventDefault();
		var field_name = '#' + $(this).data('field-name');
		var file_field = $(field_name);
		deleteFile(file_field);
		$('.node-preview-thumbnail').hide();
	});

	$(function () {
		$('.fileupload').fileupload({
			dataType: 'json',
			acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
			replaceFileInput:false,
			dropZone: $(this),
			formData: {},
			progressall: function (e, data) {
				// Update progressbar during upload
				var progress = parseInt(data.loaded / data.total * 100, 10);
				$('.picture-progress-bar').css(
						'width',
						progress + '%'
				);
			},
			done: function (e, data) {
				// Get the first file upload result (we only need one)
				var file_data = data.result.files[0]
				// Create a file object on the server and retrieve its id
				$.post("{{url_for('files.create')}}",
					{name : file_data.name, size: file_data.size, type: file_data.type,
					field_name: $(this).data('field-name')})
					.done(function(data) {
					if (data.status === 'success') {
						// If successful, add id to the picture hidden field
						var field_name = '#' + data.data.field_name;
						if ($(field_name).val()){
							$('.node-preview-thumbnail').hide();
							deleteFile($(field_name), data.data.id);
						} else {
							$(field_name).val(data.data.id);
						}
						$('.node-preview-thumbnail').attr('src', data.data.link);
						$('.node-preview-thumbnail').show();
					}
				});
			}
		});
	});

| {% endblock %}

| {% block footer_navigation %}
| {% endblock %}
| {% block footer %}
| {% endblock %}
