| {% extends 'layout.html' %}

| {% block page_title %}{{node.name}}{% endblock%}

| {% block og %}
meta(property="og:title", content="{{node.name}}")
// XXX - Replace with actual url
meta(property="og:url", content="https://cloud.blender.org")
meta(property="og:type", content="website")
| {% endblock %}

| {% block tw %}
meta(name="twitter:card", content="summary_large_image")
meta(name="twitter:site", content="@Blender_Cloud")
meta(name="twitter:title", content="{{node.name}} on Blender Cloud")
meta(name="twitter:description", content="{{node.properties.summary}}")
meta(name="twitter:image", content="{{ node.properties.picture_header.thumbnail('l') }}")
| {% endblock %}

| {% block head %}
link(href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css", rel="stylesheet")
| {% endblock %}

| {% block header_backdrop %}
.navbar-backdrop(style="background-image: url({{ node.properties.picture_header.thumbnail('l') }})")
.navbar-backdrop-overlay
| {% endblock %}

| {% block body %}

#project_container

	#project-flex

		#project_nav
			#project-header
				.project_nav-expand-btn(title="Toggle Navigation Panel [T]")
					i.ion-ios-arrow-right

				ul.breadcrumb

					| {#
					li.project-organization
						a(href="/bi") Blender Institute
					| #}

					li.project-title
						a(href="") {{ node.name }}

				#project-loading
					i.ion-load-c


			#project_tree

		#project_nav-footer
			.project_nav-collapse-btn(title="Toggle Navigation Panel [T]")
				i.ion-ios-arrow-left

		.project_split

		#project_context-container
			| {% if node.has_method('PUT') %}
			#project-header
				span#project-statusbar

				ul.project-edit-tools
					li.button-add
						a#item_add.project-mode-view(
							href="#",
							title="Add new asset")
							i.button-add-icon.zmdi.zmdi-collection-plus
							| Add Asset

					li.button-edit
						a#item_edit.project-mode-view(
							href="#",
							title="Edit asset")
							i.button-edit-icon.zmdi.zmdi-edit
							| Edit

					li.button-dropdown
						a.dropdown-toggle.project-mode-view(
							type="button",
							data-toggle="dropdown",
							aria-haspopup="true",
							aria-expanded="false")
							i.ion-android-more-vertical

						ul.dropdown-menu
							li.button-featured
								a#item_featured(
									href="#",
									title="Feature on project's homepage")
									i.button-featured-icon.ion-ios-star-outline
									| Toggle Featured

							li.button-move
								a#item_move(
									href="#",
									title="Move asset into a folder...")
									i.button-move-icon.ion-arrow-move
									| Move

							//- li.button-delete
							//- 	a#item_delete(href="#")
							//- 		i.zmdi.zmdi-delete

					// Edit Mode
					li.button-cancel
						a#item_cancel.project-mode-edit(
							href="#",
							title="Cancel changes")
							i.button-cancel-icon.ion-close-round
							| Cancel

					li.button-save
						a#item_save.project-mode-edit(
							href="#",
							title="Save changes")
							i.button-save-icon.ion-checkmark-round
							| Save Changes

			| {% endif %}

			#project_context
			#overlay-mode-move-container
				.overlay-container
					.title
						i.ion-ios-arrow-thin-left
						| Select the <strong>folder</strong> where you want to move it
					.buttons
						button#item_move_accept.move.disabled
							| Select a Folder
						button#item_move_cancel.cancel
							i.ion-close-round
							| Cancel



| {% endblock %}

| {% block footer_navigation %}{% endblock %}
| {% block footer %}{% endblock %}

| {% block footer_scripts %}
script(src="//cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js")
script(src="//releases.flowplayer.org/6.0.3/flowplayer.min.js")

script().

	function loadNodeContent(url, nodeId) {

		$.get(url, function(dataHtml) {

			$("#node-edit-form").unbind( "submit" );
			$("#item_save").unbind( "click" );
			$("#item_cancel").unbind( "click" );

			// Prevent flicker by scrolling to top before showing anything
			$("#project_context-container").scrollTop(0);

			// Update the DOM injecting the generate HTML into the page
			$('#project_context').html(dataHtml);

			// If a nodeId is specified, update the interface for editing and deletion
			if (typeof(nodeId) != 'undefined') {
				window.location.replace('#' + nodeId);
			};

		})
		.fail(function(dataResponse) {
			$('#project_context').html($('<iframe id="server_error"/>'));
			$('#server_error').attr('src', url);
		});
	}


	function displayStorage(storageNodeId, path) {
		var url = '/nodes/' + storageNodeId + '/view?embed=1&path=' + path;
		loadNodeContent(url);
	}


	function displayNode(nodeId) {
		// Remove the 'n_' suffix from the id
		if (nodeId.substring(0, 2) == 'n_') {
			nodeId = nodeId.substr(2);
		}

		var url = '/nodes/' + nodeId + '/view?embed=1'
		loadNodeContent(url, nodeId);

		$('.project-mode-view').show();
		$('.project-mode-edit').hide();
	}


	function editNode(nodeId) {

		// Remove the 'n_' suffix from the id
		if (nodeId.substring(0, 2) == 'n_') {
			nodeId = nodeId.substr(2);
		}

		var url = '/nodes/' + nodeId + '/edit?embed=1'
		$.get(url, function(dataHtml) {
			// Prevent flicker by scrolling to top before showing anything
			$("#project_context-container").scrollTop(0);

			// Update the DOM injecting the generate HTML into the page
			$('#project_context').html(dataHtml);
			window.location.replace('#' + nodeId);

			$('.project-mode-view').hide();
			$('.project-mode-edit').show();
		})
		.fail(function(dataResponse) {
			$('#project_context').html($('<iframe id="server_error"/>'));
			$('#server_error').attr('src', url);
		})
		.always(function(){
			$('.button-edit-icon').addClass('zmdi zmdi-edit').removeClass('ion-load-c spinner');
		});
	}


	function addNode(parentId) {

		var url = '/files/upload?embed=1'
		$.get(url, function(dataHtml) {
			// Prevent flicker by scrolling to top before showing anything
			$("#project_context-container").scrollTop(0);

			// Update the DOM injecting the generate HTML into the page
			$('#project_context').html(dataHtml);

			$('.project-mode-view, .project-mode-edit').hide();
		})
		.fail(function(dataResponse) {
			$('#project_context').html($('<iframe id="server_error"/>'));
			$('#server_error').attr('src', url);
		})
		.always(function(){
			$('.button-add-icon').addClass('zmdi zmdi-collection-plus').removeClass('ion-load-c spinner');
		});
	}


	/* Loaded once, on page load */
	function loadContent() {

		// If the loaded URL has an asset id hashed, arrange the view accordingly
		var nodeId = undefined;
		{% if embedded_node_id %}
			nodeId = '{{embedded_node_id}}';
			window.history.pushState({},'', '{{rewrite_url}}');
		{% else %}
		if (location.hash) {
			nodeId = location.hash.substring(1);
		} else {
			nodeId = '{{node._id}}';
		}
		{% endif %}

		displayNode(nodeId);

		$('#project_tree').jstree({
				'core': {
						'data': function (obj, callback) {
								if(obj.id === '#') { //tree root
										$.getJSON('/nodes/' + nodeId + '/view?format=jstree', function(jsonObject) {
												callback.call(this, jsonObject['items']);
										});

								} else { //normal node
										if (obj.original.type == 'group_storage') {
											nodeId = obj.original.storage_node;
											$.getJSON('/nodes/' + nodeId + '/view?format=jstree&children=1&path=' + obj.original.path, function(jsonObject) {
												callback.call(this, jsonObject.children);
											});
										} else {
											// Remove the 'n_' suffix from the id
											nodeId = obj.id.substring(2);
											$.getJSON('/nodes/' + nodeId + '/view?format=jstree&children=1', function(jsonObject) {
													callback.call(this, jsonObject.children);
											});
										}
								}
						}
				},
				"types" : {
						"#": {"valid_children": ["collection"]},
						"chapter" : {"icon": "ion-android-folder"},
						"group" : {"icon": "ion-android-folder"},
						"group_storage" : {"icon": "ion-android-folder"},
						"filesystem_node" : {"icon": "ion-android-folder"},
						"file" : {"icon": "ion-document", "max_children": 0},
						"filesystem_file" : {"icon": "ion-document", "max_children": 0},
						"image" : {"icon": "ion-image", "max_children": 0},
						"video" : {"icon": "ion-ios-film-outline", "max_children": 0},
						"blog" : {"icon": "ion-chatbubble-working", "max_children": 0},
						"default" : {"icon": "ion-document"}
				},
				"plugins": ["types",] //, "state", "sort"
		});


		var jstreeAPI = $('#project_tree').jstree(true);


		$('#project_tree').on("select_node.jstree", function (e, data) {
			if (typeof(data.node.original.path) === 'undefined') {

				var moving_node_id = Cookies.get('bcloud_moving_node_id')
				var node_id = document.getElementById("item_add");

				// Check if we are in the process of moving a node
				if (moving_node_id) {
					// Allow moving nodes only inside of node_type group
					if (data.node.original.type != 'group' || moving_node_id === data.node.original.id.substr(2) || moving_node_id === node_id.getAttribute('data-parent_node_id')) {
						$('#item_move_accept').addClass('disabled');
						$('#item_move_accept').html('Select a Folder');
					} else {
						$('#item_move_accept').removeClass('disabled');
						$('#item_move_accept').html('<i class="ion-checkmark-round"></i>Move Here');
					}
				}

				// Check they type of node and act accordingly
				if (data.node.original.type == 'blog') {
					window.location.replace('blog');
				} else {
					displayNode(data.node.id);
					jstreeAPI.toggle_node(data.node);
				}
			} else {
				displayStorage(data.node.original.storage_node, data.node.original.path);
				jstreeAPI.toggle_node(data.node);
			}
		});

		$('#item_edit').click(function(e){
			$('.button-edit-icon').addClass('ion-load-c spinner').removeClass('zmdi zmdi-edit');
			// When clicking on the edit icon, embed the edit
			e.preventDefault;
			node_id = document.getElementById("item_edit");
			editNode(node_id.getAttribute('data-node_id'));
		});


		$('#item_add').click(function(e){
			$('.button-add-icon').addClass('ion-load-c spinner').removeClass('zmdi zmdi-collection-plus');
			e.preventDefault;
			node_id = document.getElementById("item_add");
			addNode(node_id.getAttribute('data-parent_node_id'));
		});

		/* Move Node */
		moving_node_id = Cookies.get('bcloud_moving_node_id');

		function moveModeEnter() {
			$('#overlay-mode-move-container').addClass('visible');
			$('.button-move').addClass('disabled');
		};

		function moveModeExit() {
			/* Remove cookie, display current node, remove UI */
			var current_node = document.getElementById("item_edit");
			displayNode(current_node.getAttribute('data-node_id'));

			$('#overlay-mode-move-container').removeClass('visible');
			$('.button-move').removeClass('disabled');

			Cookies.remove('bcloud_moving_node_id');
		};

		if (moving_node_id) {
			moveModeEnter();
		} else {
			$('#overlay-mode-move-container').removeClass('visible');
			$('.button-move').removeClass('disabled');
		};

		$('#item_move').click(function(e){
			e.preventDefault;

			moveModeEnter();

			node_id = document.getElementById("item_edit");
			moving_node_id = Cookies.get('bcloud_moving_node_id');

			Cookies.set('bcloud_moving_node_id', node_id.getAttribute('data-node_id'));
		});

		$("#item_move_accept").click(function(e) {

			e.preventDefault();

			var current_node = document.getElementById("item_edit");
			var moving_node_id = Cookies.get('bcloud_moving_node_id');

			$.post("{{url_for('nodes.projects_move_node')}}", {
				node_id: moving_node_id, dest_parent_node_id: current_node.getAttribute('data-node_id')},
				function(data){
			}).done(function() {
				statusBarSet('success', 'Moved just fine');
				Cookies.remove('bcloud_moving_node_id');
				moveModeExit();

			});
		});

		$("#item_move_cancel").click(function(e) {
			e.preventDefault();
			moveModeExit();
		});


		$('#item_featured').click(function(e){
			e.preventDefault;
			var current_node = document.getElementById("item_edit");
			var current_node_id = current_node.getAttribute('data-node_id');

			$.post("{{url_for('nodes.projects_add_featured_node')}}", {node_id : current_node_id},
				function(data){
				// Feedback logic
			})
			.done(function(){
				$('.button-featured').addClass('featured');
				$('.button-featured-icon').addClass('ion-ios-star').removeClass('ion-ios-star-outline');

				statusBarSet('success', 'Featured status toggled', 'ion-ios-star');
		});



		});
	};

	// Initialize the page
	loadContent();


	/* UI Stuff */
	$('#project_context-container').perfectScrollbar({suppressScrollX: true});

	// Binding for ajax event
	$(document).bind("ajaxSend", function(){
		$('#project-loading').show();
	}).bind("ajaxComplete", function(){
		$('#project-loading').hide();
	});

	container_offset = $('#project-flex').offset();

	function containerResizeY(window_height){

		var container_height = window_height - container_offset.top;

		if (container_height > parseInt($('#project-flex').css("min-height"))) {
			$('#project-flex, #project_nav, #project_context-container').css(
				{'max-height': container_height + 'px'}
			);
		};
	};

	$(window).on("load resize",function(){
		containerResizeY($(window).height());
	});


	function statusBarSet(classes, html, icon_name){
		/* Utility to notify the user by temporarily flashing text on the project header
			 Usage:
				'classes' can be: success, error, warning, info, default
				'html': the text to display, can contain html tags
					(in case of errors, it's better to use data.status + data.statusText instead )
				'icon_name': optional, sets a custom icon (otherwise an icon based on the class will be used)
		*/

		var icon = '';

		if (!icon_name) {
			if (classes == 'error') {
				icon_name = 'ion-alert-circled';
			} else if (classes == 'success') {
				icon_name = 'ion-checkmark-round';
			} else if (classes == 'warning') {
				icon_name = 'ion-alert-circled';
			} else if (classes == 'info') {
				icon_name = 'ion-information-circled';
			} else {
				icon = '<i class="' + icon_name + '"></i>';
			};
		} else {
			icon = '<i class="' + icon_name + '"></i>';
		};

		var text = icon + html;
		$("#project-statusbar").addClass('active ' + classes);
		$("#project-statusbar").html(text);

		/* Back to normal */
		setTimeout(function(){
		$("#project-statusbar").removeAttr('class');
		$("#project-statusbar").html();
		}, 2000);
	};


| {% endblock %}

| {% block comment_scripts %} {% endblock%}
