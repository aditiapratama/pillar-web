| {% extends 'layout.html' %}
| {% block page_title %}Search{% endblock %}

| {% block body %}

#search-container
	#search-sidebar
		input.search-field(
				type="text",
				name="q",
				id="q",
				autocomplete="off",
				spellcheck="false",
				autocorrect="false",
				placeholder="Search by Title, Type...")

		.search-list-filters
			#accordion.panel-group.accordion(role="tablist", aria-multiselectable="true")
				#facets

		#pagination

		.search-list-stats
			#stats

	#search-list
		#hits

	#search-details
		#search-error
		#search-hit-container


| {% raw %}
// Facet template
script(type="text/template", id="facet-template")
	.panel.panel-default
		a(data-toggle='collapse', data-parent='#accordion', href='#filter_{{ facet }}', aria-expanded='true', aria-controls='filter_{{ facet }}')
			.panel-heading(role='tab')
				.panel-title {{ title }}
		.panel-collapse.collapse.in(id='filter_{{ facet }}', role='tabpanel', aria-labelledby='headingOne')
			.panel-body
				| {{#values}}
				a.facet_link.toggleRefine(
					class='{{#refined}}refined{{/refined}}',
					data-facet='{{ facet }}',
					data-value='{{ value }}',
					href='#')
					span
						| {{ label }}
						small.facet_count.pull-right {{ count }}
				| {{/values}}


// Hit template
script(type="text/template", id="hit-template")
	.search-hit(data-hit-id='{{ objectID }}')
		#search-loading.search-loading
			.spinner
				span.spin ·
		.search-hit-thumbnail
			| {{#picture}}
			img(src="{{{ picture }}}")
			| {{/picture}}
			| {{^picture}}
			.search-hit-thumbnail-icon
				| {{#media}}
				i(class="pi-{{{ media }}}")
				| {{/media}}
				| {{^media}}
				i.dark(class="pi-{{{ node_type }}}")
				| {{/media}}
			| {{/picture}}
		.search-hit-name
			| {{{ _highlightResult.name.value }}}
		.search-hit-meta
			span.project {{{ project.name }}} ·
			span.node_type {{{ node_type }}}
			| {{#media}}
			span.media · {{{ media }}}
			| {{/media}}
			span.when {{{ created }}}
			| {{#is_free}}
			span.free Free Access
			| {{/is_free}}


// Pagination template
script(type="text/template", id="pagination-template")
	ul.search-pagination.
		<li {{^prev_page}}class="disabled"{{/prev_page}}><a href="#" {{#prev_page}} class="gotoPage" data-page="{{ prev_page }}" {{/prev_page}}><i class="pi-angle-left"></i></a></li>
		{{#pages}}
		<li class="{{#current}}active{{/current}}{{#disabled}}disabled{{/disabled}}"><a href="#" {{^disabled}} class="gotoPage" data-page="{{ number }}" {{/disabled}}>{{ number }}</a></li>
		{{/pages}}
		<li {{^next_page}}class="disabled"{{/next_page}}><a href="#" {{#next_page}} class="gotoPage" data-page="{{ next_page }}" {{/next_page}}><i class="pi-angle-right"></i></a></li>

// Stats template
script(type="text/template", id="stats-template")
	span {{ nbHits }} result{{#nbHits_plural}}s{{/nbHits_plural}}
		small  ({{ processingTimeMS }}ms)
| {% endraw %}

| {% endblock %}

| {% block footer_scripts %}
script(src="//releases.flowplayer.org/6.0.3/flowplayer.min.js")
script().
	var APPLICATION_ID = '{{config.ALGOLIA_USER}}';
	var SEARCH_ONLY_API_KEY = '{{config.ALGOLIA_PUBLIC_KEY}}';
	var INDEX_NAME = '{{config.ALGOLIA_INDEX_NODES}}';
	var sortByCountDesc = null;
	var FACET_CONFIG = [
	{ name: 'node_type', title: 'Type', disjunctive: false, sortFunction: sortByCountDesc },
	{ name: 'media', title: 'Media', disjunctive: false, sortFunction: sortByCountDesc },
	{ name: 'tags', title: 'Tags', disjunctive: false, sortFunction: sortByCountDesc },
	];

script(src="//cdn.jsdelivr.net/algoliasearch/3/algoliasearch.min.js")
script(src="//cdn.jsdelivr.net/algoliasearch.helper/2/algoliasearch.helper.min.js")
script(src="//cdn.jsdelivr.net/hogan.js/3.0.0/hogan.common.js")
script(src="{{ url_for('static', filename='assets/js/algolia_search.min.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='assets/js/jquery.select2.min.js') }}")

script(type="text/javascript").

	Ps.initialize(document.getElementById('search-list'), {suppressScrollX: true});
	Ps.initialize(document.getElementById('search-hit-container'), {suppressScrollX: true});

	function displayUser(userId) {
		var url = '/nodes/' + userId + '/view?embed=1';

		$.get(url, function(dataHtml){
			$('#search-hit-container').html(dataHtml);
		})
		.done(function(){
			$('.search-loading').removeClass('active');
			$('#search-error').hide();
			$('#search-hit-container').show();
		})
		.fail(function(data){
			$('.search-loading').removeClass('active');
			$('#search-hit-container').hide();
			$('#search-error').show().html('Houston!\n\n' + data.status + ' ' + data.statusText);
		});
	}

	$('body').on('click', '.search-hit', function(){
		if ($('.search-loading').hasClass('active')){
			$(this).removeClass('active');
		}
		$(this).find('#search-loading').addClass('active');

		displayUser($(this).data('hit-id'));
		$('.search-hit').removeClass('active');
		$(this).addClass('active');
	});

	// Remove focus from search input so that the click event bound to .search-hit
	// can be fired on the first click.
	$('#search-list').hover(function(){
		$('#q').blur();
	});
	$('#search-sidebar').hover(function(){
		$('#q').focus();
	});

	/* UI Stuff */
	container_offset = $('#search-container').offset();

	function containerResizeY(window_height){

		var container_height = window_height - container_offset.top;

			if (container_height > parseInt($('#search-container').css("min-height"))) {
				$('#search-container').css(
					{'max-height': container_height + 'px',
					 'height': container_height + 'px'}
				);
				$('#search-list, #search-hit-container').css(
					{'max-height': container_height + 'px',
					 'height': container_height + 'px'}
				);
			};
		//- Ps.update(document.getElementById('project_context-container'));
		//- Ps.update(document.getElementById('project_tree'));
	};

	$(window).on("load resize",function(){
		containerResizeY($(window).height());
	});

| {% endblock %}

| {% block footer_navigation %}{% endblock %}
| {% block footer %}{% endblock %}
