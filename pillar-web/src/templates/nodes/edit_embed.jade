| {% block body %}

| {% with errors = errors %}
| {% if errors %}

| {% for field in errors %}
.alert.alert-danger(role="alert")
	strong {{field}}
	| {% for message in errors[field] %}
	| {{message}}|
	| {% endfor %}

| {% endfor %}

| {% endif %}
| {% endwith %}

| {% if error!="" %}
.alert.alert-danger(role="alert")
	| {{error}}
| {% endif %}

#node-edit-container

	#node-edit-header
		.node-edit-title {{node.name}}

	form(
		id="node-edit-form",
		method="POST",
		enctype="multipart/form-data",
		action="{{url_for('nodes.edit', node_id=node._id)}}")

		| {% for field in form %}

		| {% if field.name == 'csrf_token' %}
		| {{ field }}

		| {% else %}

		| {% if field.type == 'HiddenField' %}
		| {{ field }}

		| {% else %}

		.form-group(class="{{field.name}}")
			| {{ field.label }}
			| {{ field(class='form-control') }}

		| {% endif %}

		| {% endif %}

		| {% endfor %}

		.hidden
			a#button-cancel.btn.btn-default(href="#", data-node_id='{{node._id}}') Cancel

			input#submit_edit_node.btn.btn-default.btn-success(
				data-node-id="{{node._id}}",
				type="submit")


script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/vendor/jquery.ui.widget.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/jquery.iframe-transport.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/jquery.fileupload.js') }}")

script(type="text/javascript").

	var convert = new Markdown.getSanitizingConverter().makeHtml;

	/* Build the markdown preview when typing in textarea */
	$(function() {
		var $textarea = $('.form-group.description textarea'),
				$preview = $('<div class="node-edit-form-md-preview" />').insertAfter($textarea);

		$textarea.keyup(function() {
			// Convert markdown
			$preview.html(convert($textarea.val()));
		}).trigger('keyup');
	});


	$(function() {
		var $namefield = $('.form-group.name input'),
				$name = $('.node-edit-title');

		$namefield.keyup(function() {
			$name.html($namefield.val());
		}).trigger('keyup');
	});


	$(function () {
		$('#fileupload').fileupload({
			dataType: 'json',
			acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
			replaceFileInput:false,
			fileInput: $("input:file"),
			formData: {},
			done: function (e, data) {
				$.each(data.result.files, function (index, file) {
					$('<p/>').text(file.name).appendTo(document.body);
				});
			},
			progressall: function (e, data) {
				// Update progressbar during upload
				var progress = parseInt(data.loaded / data.total * 100, 10);
				$('.picture-progress-bar').css(
						'width',
						progress + '%'
				);
			},
			done: function (e, data) {
				// Get the first file upload result (we only need one)
				var file_data = data.result.files[0]
				// Create a file object on the server and retrieve its id
				$.post("{{url_for('files.create')}}",
					{name : file_data.name, size: file_data.size, type: file_data.type})
					.done(function(data) {
					if (data.status === 'success') {
						// If successful, add id to the picture hidden field
						$("#picture").val(data.data.id);
					}
				});
			}
		});
	});

	$("#node-edit-form").unbind( "submit" );
	$("#item_save").unbind( "click" );
	$("#item_cancel").unbind( "click" );

	/* Reset Save Changes button status */
	$("#item_save li.button-save").removeClass('field-error saving');
	$("#item_save li.button-save").html('<i class="ion-checkmark-round"></i> Save Changes');

	$("#node-edit-form").submit(function(e) {
		e.preventDefault();

		$.post("{{url_for('nodes.edit', node_id=node._id)}}",
			$(this).serialize(),
			function(dataHtml){
				$('#project_context').html(dataHtml);

				$("#item_save li.button-save").addClass('saving');
				$("#item_save li.button-save").html('<i class="ion-load-c spin"></i> Saving...');
		})
		.fail(function(){
			$("#item_save li.button-save").addClass('field-error');
			$("#item_save li.button-save").html('<i class="ion-alert-circled"></i> Houston');
		})
		.done(function(){
			$("#item_save li.button-save").html('<i class="ion-android-happy"></i> Success!');
		});

	});

	$('#item_save').click(function(e){

		$("#node-edit-form").submit();

		$('.project-mode-view').show();
		$('.project-mode-edit').hide();

		// Don't refresh whole tree, causes additional displayNode() to be called
		//- $('#project_tree').jstree("refresh");
		// XXX only refresh individual node
		//- $('#project_tree').jstree().refresh_node($('#n_{{node._id}}'));
	});

	$('#item_cancel').click(function(e){

		displayNode('{{node._id}}');

		$('.project-mode-view').show();
		$('.project-mode-edit').hide();
	});

	//- console.log($._data($(elementSelector)[0], "events"));


| {% endblock %}
