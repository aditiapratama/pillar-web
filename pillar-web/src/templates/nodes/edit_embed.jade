| {% block body %}

| {% with errors = errors %}
| {% if errors %}

| {% for field in errors %}
.alert.alert-danger(role="alert")
	strong {{field}}
	| {% for message in errors[field] %}
	| {{message}}|
	| {% endfor %}

| {% endfor %}

| {% endif %}
| {% endwith %}

| {% if error!="" %}
.alert.alert-danger(role="alert")
	| {{error}}
| {% endif %}

#node-edit-container

	#node-edit-header
		.node-edit-title {{node.name}}

	form(
		id="node-edit-form",
		method="POST",
		enctype="multipart/form-data",
		action="{{url_for('nodes.edit', node_id=node._id)}}")

		| {% for field in form %}

		| {% if field.name == 'csrf_token' %}
		| {{ field }}

		| {% else %}

		| {% if field.type == 'HiddenField' %}
		| {{ field }}

		| {% else %}

		.form-group(class="{{field.name}}")
			| {{ field.label }}
			| {{ field(class='form-control') }}

		| {% endif %}

		| {% endif %}

		| {% endfor %}

		.hidden
			a#button-cancel.btn.btn-default(href="#", data-node_id='{{node._id}}') Cancel

			input#submit_edit_node.btn.btn-default.btn-success(
				data-node-id="{{node._id}}",
				type="submit")

script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/vendor/jquery.ui.widget.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/jquery.iframe-transport.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/jquery.fileupload.js') }}")

script(type='text/javascript', src="{{ url_for('static', filename='assets/js/jquery.select2.min.js') }}")

script(type="text/javascript").

	$(function () {
		//- $('#tags').select2();
	});

	var convert = new Markdown.getSanitizingConverter().makeHtml;

	function deleteFile(fileField, newFileId) {
		newFileId = newFileId || null;
		var fileId = fileField.val();
		var url = '/files/delete/' + fileId;
		$.post(url, function(data){}).success(function(dataResponse){
			// Notify of successful request
			statusBarSet('success', 'Original File Removed Successfully');
			// If we provide the id of a previously uploaded file, add it here
			if (newFileId) {
				fileField.val(newFileId);
			} else {
				fileField.val('');
			}
		});
	}

	/* Build the markdown preview when typing in textarea */
	$(function() {

		var $textarea = $('.form-group.description textarea'),
				$loader = $('<div class="md-preview-loading"><i class="pi-spin spin"></i></div>').insertAfter($textarea),
				$preview = $('<div class="node-edit-form-md-preview" />').insertAfter($loader);

		$loader.hide();

		// Delay function to not start converting heavy posts immediately
		var delay = (function(){
			var timer = 0;
			return function(callback, ms){
				clearTimeout (timer);
				timer = setTimeout(callback, ms);
			};
		})();

		$textarea.keyup(function() {
			/* If there's an iframe (YouTube embed), delay markdown convert 1.5s */
			if (/iframe/i.test($textarea.val())) {
				$loader.show();

				delay(function(){
					// Convert markdown
					$preview.html(convert($textarea.val()));
					$loader.hide();
				}, 1500 );
			} else {
				// Convert markdown
				$preview.html(convert($textarea.val()));
			};
		}).trigger('keyup');
	});


	$(function() {
		var $namefield = $('.form-group.name input'),
				$name = $('.node-edit-title');

		$namefield.keyup(function() {
			$name.html($namefield.val());
		}).trigger('keyup');
	});


	$(function () {
		$('.fileupload').fileupload({
			dataType: 'json',
			acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
			replaceFileInput:false,
			dropZone: $(this),
			formData: {},
			progressall: function (e, data) {
				// Update progressbar during upload
				var progress = parseInt(data.loaded / data.total * 100, 10);
				$('.picture-progress-bar').css(
						'width',
						progress + '%'
				);
			},
			done: function (e, data) {
				// Get the first file upload result (we only need one)
				var fileData = data.result.files[0]
				// Create a file object on the server and retrieve its id
				statusBarSet('info', 'Uploading File');

				$('.button-save').addClass('disabled');
				$("li.button-save a#item_save").html('<i class="pi-spin spin"></i> Uploading Preview');

				$.post("{{url_for('files.create')}}",
					{name : fileData.name, size: fileData.size, type: fileData.type,
					field_name: $(this).data('field-name'), project_id: ProjectUtils.projectId()})
					.done(function(data) {
					if (data.status === 'success') {
						// If successful, add id to the picture hidden field
						var field_name = '#' + data.data.field_name;
						if ($(field_name).val()){
							$('.node-preview-thumbnail').hide();
							deleteFile($(field_name), data.data.id);
						} else {
							$(field_name).val(data.data.id);
						}
						$('.node-preview-thumbnail').attr('src', data.data.link);
						$('.node-preview-thumbnail').show();
						statusBarSet('success', 'File Uploaded Successfully');

						$('.button-save').removeClass('disabled');
						$("li.button-save a#item_save").html('<i class="pi-check"></i> Save Changes');
					}
				});
			}
		});
	});

	/* Render the Attachments custom form */
	var attachments = $('#attachments');
	if (attachments.length > 0) {
		var attachments_data = $.parseJSON(attachments.val());
		$.each(attachments_data, function(i, v) {
			//- console.log(v.field);
			$.each(v.files, function(i_files, v_files) {
				//- console.log(v_files.slug);
				//- console.log(v_files.file);
				var form = $('<div>');
				form.addClass('form-group');
				form.append($('<input>').val(v_files.slug).addClass('form-control'));
				form.append($('<input>').val(v_files.file).addClass('form-control'));
				form.append($('<span>').text("Delete").addClass('btn').addClass('btn-default'));
				attachments.after(form);
			});

			attachments.after($('<div>').text(v.field));
		});
	}

	$("#node-edit-form").unbind( "submit" );
	$("#item_save").unbind( "click" );
	$("#item_cancel").unbind( "click" );
	$("#file_delete").unbind( "click" );

	/* Reset Save Changes button status */
	$("li.button-save").removeClass('field-error saving');
	$("li.button-save a#item_save").html('<i class="pi-check"></i> Save Changes');


	/* Submit changes */
	$("#node-edit-form").submit(function(e) {
		e.preventDefault();

		/* Let us know started saving */
		$("li.button-save").addClass('saving');
		$("li.button-save a#item_save").html('<i class="pi-spin spin"></i> Saving...');

		$.ajax({
			url: "{{url_for('nodes.edit', node_id=node._id)}}",
			data: $(this).serialize(),
			type: 'POST'
		})
		.fail(function(data){
			/* Something went wrong, print it */
			statusBarSet('error', data.status + ' ' + data.statusText);

			$("li.button-save").addClass('field-error');
			$("li.button-save a#item_save").html('<i class="pi-warning"></i> Houston');

			/* Back to normal */
			setTimeout(function(){
				$("li.button-save").removeClass('saving field-error');
				$("li.button-save a#item_save").html('<i class="pi-check"></i> Try Again');
			}, 2000);
		})
		.done(function(dataHtml){
			/* Success! */

			/* Load content*/
			$('#project_context').html(dataHtml);
			statusBarSet('success', 'Saved Successfully');

			$("#project_context-container").scrollTop(0);

			/* Style button */
			$("li.button-save").removeClass('saving field-error');
			$("li.button-save a#item_save").html('<i class="pi-check"></i> Save Changes');

			/* Show/hide buttons */
			$('.project-mode-view').show();
			$('.project-mode-edit').hide();

		});

	});

	$('#item_save').click(function(e){
		$("#node-edit-form").submit();
		$('#project_tree').jstree("refresh");
		// XXX only refresh individual node
		//- $('#project_tree').jstree().refresh_node($('#n_{{node._id}}'));
	});

	$('#item_cancel').click(function(e){
		displayNode('{{node._id}}');
		$('.project-mode-view').show();
		$('.project-mode-edit').hide();
	});

	$('#file_delete').click(function(e){
		e.preventDefault();
		var file_field = $('#picture');
		deleteFile(file_field);
		$('.node-preview-thumbnail').hide();
	});

	//- console.log($._data($(elementSelector)[0], "events"));


| {% endblock %}
