| {% extends 'layout.html' %}

| {% block page_title %}Edit {{ project.name }}{% endblock %}

| {% block header_backdrop %}
| {% if project.picture_header %}
.navbar-backdrop(style="background-image: url({{ project.picture_header.thumbnail('l', api=api) }})")
| {% else %}
.navbar-backdrop
| {% endif %}
.navbar-backdrop-overlay
| {% endblock %}

| {% block body %}
.container.box
	form(
		id="project_edit_form"
		method='POST',
		action="{{url_for('projects.edit', project_url=project.url)}}")

		#blog_container.post-create

			| {% with errors = errors %}
			| {% if errors %}
			| {% for field in errors %}
			.alert.alert-danger(role='alert')
				strong {{field}}
				| {% for message in errors[field] %}
				| {{message}}|
				| {% endfor %}
			| {% endfor %}
			| {% endif %}
			| {% endwith %}

			#blog_index-sidebar
				.blog_project-sidebar
					#blog_post-edit-form
						| {% for field in form %}
						| {% if field.name in sidebar_selection %}

						.form-group(class="{{field.name}}{% if field.errors %} error{% endif %}")
							| {{ field.label }}
							| {% if field.name == 'picture' %}
							| {% if post.picture %}
							img.node-preview-thumbnail(src="{{ post.picture.thumbnail('m', api=api) }}")
							a(href="#", class="file_delete", data-field-name="picture", data-file_id="{{post.picture._id}}") Delete
							| {% endif %}
							| {% endif %}
							| {{ field(class='form-control') }}

							| {% if field.errors %}
							ul.error
								| {% for error in field.errors %}
								li {{ error }}
								| {% endfor %}
							| {% endif %}

						| {% endif %}
						| {% endfor %}

					button.btn.btn-default.button-create(type='submit')
						i.pi-check
						| Save Changes

					a.btn.btn-default.button-back(href="{{ url_for('projects.view', project_url=project.url) }}")
						| Go to Project

			#blog_post-edit-container
				#blog_post-edit-title
					| Edit Project

				#blog_post-edit-form
					| {% for field in form %}
					| {% if field.name == 'csrf_token' %}
					| {{ field }}
					| {% else %}
					| {% if field.type == 'HiddenField' %}
					| {{ field }}
					| {% else %}

					| {% if field.name not in sidebar_selection %}

					.form-group(class="{{field.name}}{% if field.errors %} error{% endif %}")
						| {{ field.label }}
						| {{ field(class='form-control') }}

						| {% if field.errors %}
						ul.error
							| {% for error in field.errors %}
							li {{ error }}
							| {% endfor %}
						| {% endif %}

					| {% endif %}
					| {% endif %}
					| {% endif %}
					| {% endfor %}

				h3 Node Types
				ul
					| {% for node_type in project.node_types %}
					li
						a(href="{{ url_for('projects.edit_node_type', project_url=project.url, node_type_name=node_type.name) }}") {{node_type.name}}
					| {% endfor %}



| {% endblock %}

| {% block footer_scripts %}
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/vendor/jquery.ui.widget.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/jquery.iframe-transport.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='jquery-file-upload/js/jquery.fileupload.js') }}")
script(type='text/javascript', src="{{ url_for('static', filename='assets/js/file_upload.min.js') }}")

script(type="text/javascript").
	ProjectUtils.setProjectAttributes({projectId: "{{project._id}}", isProject: "", nodeId: ""});
	var convert = new Markdown.getSanitizingConverter().makeHtml;

	$('.button-create').on('click', function(e){
		e.preventDefault();

		$(this).html('<i class="pi-spin spin"></i> Saving');
		$('#project_edit_form').submit();
	});

	/* Build the markdown preview when typing in textarea */
	$(function() {

		var $textarea = $('.form-group.content textarea'),
				$loader = $('<div class="md-preview-loading"><i class="pi-spin spin"></i></div>').insertAfter($textarea),
				$preview = $('<div class="node-edit-form-md-preview" />').insertAfter($loader);

		$loader.hide();

		// Delay function to not start converting heavy posts immediately
		var delay = (function(){
			var timer = 0;
			return function(callback, ms){
				clearTimeout (timer);
				timer = setTimeout(callback, ms);
			};
		})();

		$textarea.keyup(function() {
			/* If there's an iframe (YouTube embed), delay markdown convert 1.5s */
			if (/iframe/i.test($textarea.val())) {
				$loader.show();

				delay(function(){
					// Convert markdown
					$preview.html(convert($textarea.val()));
					$loader.hide();
				}, 1500 );
			} else {
				// Convert markdown
				$preview.html(convert($textarea.val()));
			};
		}).trigger('keyup');
	});

| {% endblock %}

| {% block footer_navigation %}
| {% endblock %}
| {% block footer %}
| {% endblock %}
