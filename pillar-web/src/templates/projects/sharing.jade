| {% extends 'layout.html' %}

| {% block page_title %}Sharing: {{ project.name }}{% endblock %}

| {% block header_backdrop %}
| {% if project.picture_header %}
.navbar-backdrop(style="background-image: url({{ project.picture_header.thumbnail('l', api=api) }})")
| {% else %}
.navbar-backdrop
| {% endif %}
.navbar-backdrop-overlay
| {% endblock %}

| {% block body %}
#project_container

	#project-flex

		#project_nav
			#project-header.navigation
				.project-title
					a(href="{{url_for('projects.view', project_url=project.url, _external=True)}}")
						i.pi-home
						| {{ project.name }}

				#project-loading
					i.pi-spin

			// TODO - make list a macro
			#project_tree
				ul.project_nav-edit-list
					li(class="{% if title == 'edit' %}active{% endif %}")
						a(href="{{ url_for('projects.edit', project_url=project.url) }}")
							i.pi-list
							| Overview
					li(class="{% if title == 'sharing' %}active{% endif %}")
						a(href="{{ url_for('projects.sharing', project_url=project.url) }}")
							i.pi-share
							| Sharing
					li(class="{% if title == 'edit_node_types' %}active{% endif %}")
						a(href="{{ url_for('projects.edit_node_types', project_url=project.url) }}")
							i.pi-puzzle
							| Node Types


		#project_nav-footer
			.project_nav-collapse-btn(
			title="Collapse Navigation [T]",
			data-toggle="tooltip",
			data-placement="right")
				i.pi-angle-double-left

		.project_split(title="Toggle Navigation [T]")

		#project-header.context
			ul.breadcrumb.context
				li.project-title
					a(href="") {{ project.name }}

			span#project-statusbar

			span#project-edit-title
				| Manage users you want to collaborate with in this project.

		#project_context-container
			.project_nav-expand-btn(
			title="Expand Navigation [T]",
			data-toggle="tooltip",
			data-placement="right")
				i.pi-angle-double-right

			#project_context
				#node-edit-container
					.row(id="node-edit-form")
						.col-md-6
							.sharing-users-search
								.form-group
									input#user-select.form-control(
										name='contacts',
										type='text',
										placeholder='Add users by name')

							ul.sharing-users-list
								| {% for user in users %}
								li.sharing-users-item(user-id="{{ user['_id'] }}")
									.sharing-users-avatar
										img(src="{{ user['avatar'] }}")
									.sharing-users-details
										span.sharing-users-name {{user['full_name']}}
										span.sharing-users-extra {{user['username']}}
									.sharing-users-action
										| {% if current_user.objectid != user['_id'] %}
										button.user-remove(title="Remove this user from your project")
											i.pi-trash
										| {% else %}
										span You
										| {% endif %}
								| {% endfor %}
						.col-md-6
							.sharing-users-info
								h4 What can team members do?
								p.
									Users you add here will be able to upload new content to your
									project, as well as see, edit, and comment on the content previously created.

| {% endblock %}

| {% block footer_navigation %}
| {% endblock %}
| {% block footer_scripts %}
script(src='//cdn.jsdelivr.net/autocomplete.js/0/autocomplete.jquery.min.js')
script.
	$(document).ready(function() {
		var APPLICATION_ID = '{{config.ALGOLIA_USER}}'
		var SEARCH_ONLY_API_KEY = '{{config.ALGOLIA_PUBLIC_KEY}}';
		var INDEX_NAME = '{{config.ALGOLIA_INDEX_USERS}}';
		var client = algoliasearch(APPLICATION_ID, SEARCH_ONLY_API_KEY);
		var index = client.initIndex(INDEX_NAME);

		$('#user-select').autocomplete({hint: false}, [
			{
				source: function (q, cb) {
					index.search(q, {hitsPerPage: 5}, function (error, content) {
						if (error) {
							cb([]);
							return;
						}
						cb(content.hits, content);
					});
				},
				displayKey: 'full_name',
				minLength: 2,
				limit: 10,
				templates: {
					suggestion: function (hit) {
						return hit._highlightResult.full_name.value + ' (' + hit._highlightResult.username.value + ')';
					}
				}
			}
		]).on('autocomplete:selected', function (event, hit, dataset) {

			var lis = document.getElementsByClassName('sharing-users-item');
			var has_match = false;

			for (var i = 0; i < lis.length; ++i) {

				// Check if the user already is in the list
				if ($(lis[i]).attr('user-id') == hit.objectID){

					$(lis[i]).addClass('active');
					setTimeout(function(){ $('.sharing-users-item').removeClass('active');}, 350);
					statusBarSet('info', 'User is already part of the project', 'pi-info');

					has_match = false;
					break;
				} else {
					has_match = true;
					continue;
				}
			};

			if (has_match){
				addUser(hit.objectID);
			}

		});


		$('body').on('click', '.user-remove', function(e) {
			var userId = $(this).parent().parent().attr('user-id');
			removeUser(userId);
		});


		function addUser(userId){
			if (userId && userId.length > 0) {
				$.post("{{url_for('projects.sharing', project_url=project.url)}}",
								{user_id: userId, action: 'add'})
					.done(function (data) {

						$("ul.sharing-users-list").prepend('' +
							'<li class="sharing-users-item" user-id="' + data._id + '">' +
								'<div class="sharing-users-avatar">' +
									'<img src="' + data.avatar  + '">'+
								'</div>' +
								'<div class="sharing-users-details">' +
									'<span class="sharing-users-name">' + data.full_name + '</span>' +
									'<span class="sharing-users-extra">' + data.username + '</span>' +
								'</div>' +
								'<div class="sharing-users-action">' +
									'<button title="Remove this user from your project" class="user-remove">'+
										'<i class="pi-trash"></i>'+
									'</button>'+
								'</div>'+
							'</li>');

						$("ul.sharing-users-list").find("[user-id='" + userId + "']").addClass('added');
						setTimeout(function(){ $('.sharing-users-item').removeClass('added');}, 350);
						statusBarSet('success', 'User added to this project!', 'pi-grin');
					})
					.fail(function (data){
						statusBarSet('error', 'Could not add user (' + data._status + ')', 'pi-warning');
					});
			} else {
				statusBarSet('error', 'Please select a user from the list', 'pi-warning');
			}
		};


		function removeUser(userId){
			$.post("{{url_for('projects.sharing', project_url=project.url)}}",
							{user_id: userId, action: 'remove'})
				.done(function (data) {
					$("ul.sharing-users-list").find("[user-id='" + userId + "']").remove();
					statusBarSet('success', 'User removed from this project', 'pi-trash');
				})
				.fail(function (data){
					statusBarSet('error', 'Could not remove user (' + data._status + ')', 'pi-warning');
				});
		}

	});
| {% endblock %}
